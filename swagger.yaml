openapi: 3.0.0
info:
  title: E-commerce Product API
  description: Simple RESTful API for e-commerce products
  version: 1.0.0
  contact:
    email: kordiwork9954@gmail.com
servers:
  - url: http://localhost:3000/api
    description: Local development server
paths:
  /products:
    get:
      summary: Get all products
      description: Returns a list of all products with optional category filtering
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter products by category
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product
      description: Add a new product to the collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Bad request - invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  /products/{id}:
    get:
      summary: Get product by ID
      description: Returns a single product by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Product ID
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Product ID automatically generated by MongoDB
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        price:
          type: number
          format: float
          description: Product price
        imageUrl:
          type: string
          description: URL for product image
        category:
          type: string
          description: Product category
        stock:
          type: integer
          description: Number of items in stock
        createdAt:
          type: string
          format: date-time
          description: Date when product was added
    ProductInput:
      type: object
      required:
        - name
        - description
        - price
        - imageUrl
        - category
      properties:
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        price:
          type: number
          format: float
          description: Product price
        imageUrl:
          type: string
          description: URL for product image
        category:
          type: string
          description: Product category
        stock:
          type: integer
          description: Number of items in stock
